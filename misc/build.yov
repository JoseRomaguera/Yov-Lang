param_dev := false;
param_optimize := true;
param_profile := arg_flag("profile");

mode := arg_string("mode", "dist");

if (mode == "dev") {
    param_dev = true;
    param_optimize = false;
}
else if (mode == "dist") {
}
else if (mode == "manual") {
    param_dev = ask_yesno("dev");
    param_optimize = ask_yesno("optimize");
    param_profile = ask_yesno("profile");
}
else {
    println("Unknown mode '{mode}'");
    exit();
}

app_name := "yov";

//-

root := context.script_dir / "..";
set_cd(root);

create_directory("build", true);
set_cd("build");

defines: String[];
libs:    String[];
cflags:  String[];
lflags:  String[];

// Defines
{
    if (param_dev) defines += "DEV";
}

// Libs
{
    libs += "kernel32.lib";
    libs += "user32.lib";
}

// Flags
{
    cflags += "std:c17";
    cflags += "nologo";
    
    cflags += { "W2", "we4305", "we4244", "wd4146" };
    
    cflags += { "GR-", "Os" };
    if (param_optimize) cflags += "O2";
    else cflags += "Zi";
    cflags += "Oi-";
    
    if (param_optimize) {
        cflags += "EHs-c-";
        cflags += "GS-";
        lflags += "NODEFAULTLIB";
        lflags += "DEBUG:NONE";
    }
    
    lflags += { "IGNORE:4210" };
    lflags += { "MERGE:.rdata=.", "MERGE:.pdata=.", "MERGE:text=.", "SECTION:.,ER" };
    lflags += { "ENTRY:main", "SUBSYSTEM:CONSOLE" };
    lflags += "incremental:no";
    lflags += "out:{app_name}.exe";
    lflags += "PDB:{app_name}.pdb";
}

// Call msvc

msvc: String = "cl {root}code/main.cpp ";
for (def : defines) msvc += "/D{def}=1 ";
for (lib : libs)    msvc += "{lib} ";
for (flag : cflags) msvc += "/{flag} ";
msvc += "/I code/ /link ";
for (flag : lflags) msvc += "/{flag} ";

result: Int = call(msvc);

print("\n");

if (result != 0) {
	print("Can't compile!!\n");
    exit();
}

print("Build finished!!\n");