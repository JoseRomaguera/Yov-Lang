
Foo :: struct {
    a: Int;
    b: Int;
}

g0 := 0;

main :: ()
{
    a0 := 5;
    b0 := -5;
    foo0: Foo;
    foo0.a = &a0;
    
    b0 = a0;
    a1 := take_ref_or_not(&a0, true);
    b1 := take_ref_or_not(&a0, false);
    
    assert(a0 == a1 && a0 == foo0.a && a0 == b0 && a0 == b1);
    a0 = 10;
    assert(a0 == a1 && a0 == foo0.a && a0 != b1 && a0  != b1);
    
    g0 = -1;
    g0 = &b0;
    b0 = 18;
    assert(b0 == g0);
}

take_ref_or_not :: (ref: Int&, take: Bool) -> Int& {
    if (take) return &ref;
    new_ref := ref;
    return &new_ref;
}
